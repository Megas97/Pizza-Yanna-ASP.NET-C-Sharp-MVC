@model IEnumerable<PizzaYanna.Models.User>

@{
    ViewBag.Title = "Manage Users";
}

@section head
{
    <meta name="robots" content="noindex, nofollow">
    <meta name="googlebot" content="noindex, nofollow" />
    <meta name="distribution" content="global" />
}

<h2>Manage Users</h2>

<center>
    @using (Html.BeginForm("GiveAdmin", "Admin", FormMethod.Post))
    {
        <hr />
        <div class="form-group">
            <div class="text-success">
                @(ViewBag.Message)&nbsp;
            </div>
        </div>
        <div class="form-horizontal" itemscope itemtype="http://schema.org/ItemList">
            <label>Choose a user to which to give admin access to!</label>
            <br />
            @using PizzaYanna.Models;
            @{
                List<SelectListItem> usersList = new List<SelectListItem>();
                using (DBEntities de = new DBEntities())
                {
                    foreach (User user in de.Users)
                    {
                        var userRoles = user.UsersRoles;
                        foreach (var userRole in userRoles)
                        {
                            if (userRole.Role.RoleName.Equals("User"))
                            {
                                usersList.Add(new SelectListItem
                                {
                                    Text = user.EmailID,
                                    Value = user.EmailID
                                });
                            }
                        }
                    }
                    @Html.DropDownList("UsersList1", usersList, "-- Select User --", new { @class = "form-control", @required = "required" })
                }
            }
            <br />
            <div class="form-group">
                <input type="submit" value="Give Admin" class="btn btn-success" />
            </div>
        </div>
    }

    @using (Html.BeginForm("RevokeAdmin", "Admin", FormMethod.Post))
    {
        <hr />
        <div class="form-group">
            <div class="text-success">
                @(ViewBag.Message2)&nbsp;
            </div>
        </div>
        <div class="form-horizontal" itemscope itemtype="http://schema.org/ItemList">
            <label>Choose a user from which to revoke admin access!</label>
            <br />
            @using PizzaYanna.Models;
            @{
                List<SelectListItem> usersList = new List<SelectListItem>();
                using (DBEntities de = new DBEntities())
                {
                    User currentUser = de.Users.Where(a => a.EmailID == HttpContext.Current.User.Identity.Name).FirstOrDefault();
                    foreach (User user in de.Users)
                    {
                        var userRoles = user.UsersRoles;
                        foreach (var userRole in userRoles)
                        {
                            if (userRole.Role.RoleName.Equals("Admin"))
                            {
                                if (!user.EmailID.Equals(currentUser.EmailID))
                                {
                                    usersList.Add(new SelectListItem
                                    {
                                        Text = user.EmailID,
                                        Value = user.EmailID
                                    });
                                }
                            }
                        }
                    }
                    @Html.DropDownList("UsersList2", usersList, "-- Select User --", new { @class = "form-control", @required = "required" })
                }
            }
            <br />
            <div class="form-group">
                <input type="submit" value="Revoke Admin" class="btn btn-success" />
            </div>
        </div>
    }

    @using (Html.BeginForm("DeleteUser", "Admin", FormMethod.Post))
    {
        <hr />
        <div class="form-group">
            <div class="text-success">
                @(ViewBag.Message3)&nbsp;
            </div>
        </div>
        <div class="form-horizontal" itemscope itemtype="http://schema.org/ItemList">
            <label>Choose a user which to delete!</label>
            <br />
            @using PizzaYanna.Models;
            @{
                List<SelectListItem> usersList = new List<SelectListItem>();
                using (DBEntities de = new DBEntities())
                {
                    User currentUser = de.Users.Where(a => a.EmailID == HttpContext.Current.User.Identity.Name).FirstOrDefault();
                    foreach (User user in de.Users)
                    {
                        var userRoles = user.UsersRoles;
                        foreach (var userRole in userRoles)
                        {
                            if (!user.EmailID.Equals(currentUser.EmailID))
                            {
                                usersList.Add(new SelectListItem
                                {
                                    Text = user.EmailID,
                                    Value = user.EmailID
                                });
                            }
                        }
                    }
                    @Html.DropDownList("UsersList3", usersList, "-- Select User --", new { @class = "form-control", @required = "required" })
                }
            }
            <br />
            <div class="form-group">
                <input type="submit" value="Delete User" class="btn btn-success" />
            </div>
        </div>
    }

    <table class="table" id="usersListTable">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.UserID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LastName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EmailID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Address)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsEmailVerified)
                </th>
                <th>
                    Is Admin?
                </th>
                <th>
                    Order History
                </th>
            </tr>
        </thead>
        <tbody id="usersListTableBody">
            @foreach (var item in Model)
            {
                <tr itemscope itemtype="http://schema.org/Person">
                    <td>
                        <strong>@Html.DisplayFor(modelItem => item.UserID)</strong>
                    </td>
                    <td itemprop="givenName">
                        @if ((item.FirstName != "") || (item.FirstName != null))
                        {
                            <strong>@Html.DisplayFor(modelItem => item.FirstName)</strong>
                        }
                        else
                        {
                            <strong>None</strong>
                        }
                    </td>
                    <td itemprop="familyName">
                        @if ((item.LastName != "") || (item.LastName != null))
                        {
                            <strong>@Html.DisplayFor(modelItem => item.LastName)</strong>
                        }
                        else
                        {
                            <strong>None</strong>
                        }
                    </td>
                    <td itemprop="email">
                        @if ((item.EmailID != "") || (item.EmailID != null))
                        {
                            <strong>@Html.DisplayFor(modelItem => item.EmailID)</strong>
                        }
                        else
                        {
                            <strong>None</strong>
                        }
                    </td>
                    <td itemprop="address">
                        <br class="usersListTableBodyNewline"/>
                        @if ((item.Address != "") || (item.Address != null))
                        {
                            <strong>@Html.DisplayFor(modelItem => item.Address)</strong>
                        }
                        else
                        {
                            <strong>None</strong>
                        }
                    </td>
                    <td>
                        @if (item.IsEmailVerified != false)
                        {
                            <strong>@Html.DisplayFor(modelItem => item.IsEmailVerified) Yes</strong>
                        }
                        else
                        {
                            <strong>@Html.DisplayFor(modelItem => item.IsEmailVerified) No</strong>
                        }
                    </td>
                    <td>
                        @using (DBEntities de = new DBEntities())
                        {
                            User user = de.Users.Where(a => a.EmailID == item.EmailID).FirstOrDefault();
                            if (user != null)
                            {
                                var userRoles = user.UsersRoles;
                                foreach (var userRole in userRoles)
                                {
                                    if (userRole.Role.RoleName.Equals("Admin"))
                                    {
                                        if (userRole.UserID == user.UserID)
                                        {
                                            <strong>@Html.CheckBox("isAdminTrueCheckbox", true, new { disabled = "disabled" }) Yes</strong>
                                        }
                                    }
                                    else if (userRole.Role.RoleName.Equals("User"))
                                    {
                                        if (userRole.UserID == item.UserID)
                                        {
                                            <strong>@Html.CheckBox("isAdminFalseCheckbox", false, new { disabled = "disabled" }) No</strong>
                                        }
                                    }
                                }
                            }
                        }
                    </td>
                    <td>
                        <strong>
                            @Html.ActionLink("View Orders", "UserOrderHistory", "Admin", new { id = item.UserID }, null)
                        </strong>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</center>

<div style="text-align:center;">
    <input type="button" value="Admin Panel" class="btn btn-default" onclick="location.href='@Url.Action("AdminPanel", "Admin")';" />
</div>