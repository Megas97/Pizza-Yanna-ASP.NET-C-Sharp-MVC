@model PizzaYanna.Models.Pizza

@{
    ViewBag.Title = "Upload Pizza";
}

@section head
{
    <meta name="robots" content="noindex, nofollow">
    <meta name="googlebot" content="noindex, nofollow" />
    <meta name="distribution" content="global" />
}

<h2>Upload Pizza</h2>

<hr />
<div class="container text-success" style="text-align: center;">
    @ViewBag.Message&nbsp;
</div>
<hr />

@using (Html.BeginForm("UploadPizza", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.PizzaName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PizzaName, new { htmlAttributes = new { @class = "form-control", @required = "required", maxlength = "30", @pattern = "^[A-Za-zА-Яа-я]+[A-Za-zА-Яа-я ]*$" } })
                @Html.ValidationMessageFor(model => model.PizzaName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" itemscope itemtype="http://schema.org/ItemList">
            @Html.LabelFor(model => model.RecipeID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    List<SelectListItem> recipesList = new List<SelectListItem>();
                    using (DBEntities de = new DBEntities())
                    {
                        foreach (var recipe in de.Recipes.OrderBy(a => a.RecipeName))
                        {
                            if (!recipe.RecipeName.StartsWith("Custom: "))
                            {
                                double totalPrice = 0;
                                foreach (var recIng in recipe.RecipesIngredients)
                                {
                                    totalPrice += recIng.Ingredient.IngredientPrice;
                                }
                                recipesList.Add(new SelectListItem
                                {
                                    Text = recipe.RecipeName + " - " + String.Format("{0:0.00}", totalPrice) + " BGN",
                                    Value = recipe.RecipeName
                                });
                            }
                        }
                        @Html.DropDownList("RecipesList", recipesList, "-- Select Recipe --", new { @class = "form-control", @required = "required" })
                    }
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PizzaSize, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @using PizzaYanna.Models;
                @{
                    List<SelectListItem> sizesList = new List<SelectListItem>();
                    sizesList.Add(new SelectListItem
                    {
                        Text = "Small (450g) + 50% recipe price",
                        Value = "Small (450g)"
                    });
                    sizesList.Add(new SelectListItem
                    {
                        Text = "Medium (700g) + 80% recipe price",
                        Value = "Medium (700g)"
                    });
                    sizesList.Add(new SelectListItem
                    {
                        Text = "Large (950g) + 110% recipe price",
                        Value = "Large (950g)"
                    });
                    @Html.DropDownList("SizesList", sizesList, "-- Select Size --", new { @class = "form-control", @required = "required" })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PizzaPicturePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group">
                    @Html.TextBox("Image", "", new { type = "file", accept = "image/*", @required = "required" }) <br />
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Upload" class="btn btn-success" />
            </div>
        </div>
    </div>
}