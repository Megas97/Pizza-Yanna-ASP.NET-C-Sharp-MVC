@model PizzaYanna.Models.User

@{
    ViewBag.Title = "My Profile";
}

@section head
{
    <meta name="description" content="View your personal details.">
    <meta name="keywords" content="view profile, current user profile, view, profile, your profile, personal information, info">
    <meta property="og:type" content="website">
    <meta property="og:url" content="http://www.pizza-yanna.somee.com/view-profile">
    <meta property="og:title" content="View Profile">
    <meta property="og:image" content="http://www.pizza-yanna.somee.com/Design/Logo.png">
    <meta property="og:description" content="View your personal details.">
    <meta name="robots" content="index, follow">
    <meta name="googlebot" content="index, follow" />
    <meta name="distribution" content="global" />
}

<h2>My Profile</h2>

<div>
    <hr />
    <dl class="dl-horizontal" itemscope itemtype="http://schema.org/Person">
        <dt>
            @Html.DisplayNameFor(model => model.FirstName):
        </dt>
        <dd itemprop="givenName">
            @if ((ViewBag.ViewProfileUser.FirstName != "") && (ViewBag.ViewProfileUser.FirstName != null))
            {
                @Html.DisplayFor(model => model.FirstName)
            }
            else
            {
                @:None
            }
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LastName):
        </dt>
        <dd itemprop="familyName">
            @if ((ViewBag.ViewProfileUser.LastName != "") && (ViewBag.ViewProfileUser.LastName != null))
            {
                @Html.DisplayFor(model => model.LastName)
            }
            else
            {
                @:None
            }
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Address):
        </dt>
        <dd itemprop="address">
            @if ((ViewBag.ViewProfileUser.Address != "") && (ViewBag.ViewProfileUser.Address != null))
            {
                @Html.DisplayFor(model => model.Address)
            }
            else
            {
                @:None
            }
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EmailID):
        </dt>
        <dd itemprop="email">
            @if ((ViewBag.ViewProfileUser.EmailID != "") && (ViewBag.ViewProfileUser.EmailID != null))
            {
                @Html.DisplayFor(model => model.EmailID)
            }
            else
            {
                @:None
            }
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Password) Hash:
        </dt>
        <dd>
            @if ((ViewBag.ViewProfileUser.Password != "") && (ViewBag.ViewProfileUser.Password != null))
            {
                @Html.DisplayFor(model => model.Password)
            }
            else
            {
                @:None
            }
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsEmailVerified):
        </dt>
        <dd>
            @if (ViewBag.ViewProfileUser.IsEmailVerified != false)
            {
                @Html.DisplayFor(model => model.IsEmailVerified) @:Yes
            }
            else
            {
                @Html.DisplayFor(model => model.IsEmailVerified) @:No
            }
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ActivationCode):
        </dt>
        <dd>
            @if (ViewBag.ViewProfileUser.ActivationCode != null)
            {
                @Html.DisplayFor(model => model.ActivationCode)
            }
            else
            {
                @:None
            }
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ResetPasswordCode):
        </dt>
        <dd>
            @if ((ViewBag.ViewProfileUser.ResetPasswordCode != "") && (ViewBag.ViewProfileUser.ResetPasswordCode != null))
            {
                @Html.DisplayFor(model => model.ResetPasswordCode)
            }
            else
            {
                @:None
            }
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CurrentPromoCode):
        </dt>
        <dd>
            @if ((ViewBag.ViewProfileUser.CurrentPromoCode != "") && (ViewBag.ViewProfileUser.CurrentPromoCode != null))
            {
                @Html.DisplayFor(model => model.CurrentPromoCode)@ViewBag.PromoInfo
            }
            else
            {
                @:None
            }
        </dd>
    </dl>
</div>

<p>
    <input type="button" value="Edit Profile" class="btn btn-default" onclick="location.href='@Url.Action("EditProfile", "User")';" />
    <input type="button" value="Order History" class="btn btn-default" onclick="location.href='@Url.Action("OrderHistory", "Home")';" />
</p>

@section Scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}